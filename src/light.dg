%% Lighting rules

(in range of headlights #middle-of-nowhere/#backtracking/#crumbling-concrete/#base-of-tower/#staging-area)

%% We're going against the grain, a bit, in terms of whats dark.
%% We want the entire area to be lit by the emergency lights if they are on,
%% then headlights, if on, then the flashlight (as a normal light source).
%% Got a lot of "dynamic predicate depends on another dynamic predicate" errors.

(inherently dark (tower vicinity $))

%% Here's my solution; when the emergency lights are on, or the headlights are on,
%% then Knock provides light!

(#knock provides light)
    (current room $Room)
    {
        (#emergency-lights is on)
        (tower vicinity $Room)
    (or)
        (#headlights is on)
        (in range of headlights $Room)
    }

%% Several room descriptions adjust based on the light available in the room;
%% these predicates help.  These are not exactly mutually exclusive.
%% brightly lit is stronger than lit by flashlight, and lit by headlights is
%% the weakest. A room may be both lit by flashlight and lit by headlights though.

(brightly lit $Room)
    (#emergency-lights is on)
    (tower vicinity $Room)

(lit by flashlight $Room)
    (#flashlight is on)
    (player can see #flashlight)
    ~(brightly lit $Room)

(lit by headlights $Room)
    (#headlights is on)
    (in range of headlights $Room)
    ~(brightly lit $Room)