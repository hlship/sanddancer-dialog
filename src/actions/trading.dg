%% Trading memories for talents

(understand [trade/exchange | $Words] as [trade $Memory for $Talent])
    *(split $Words by [for] into $Give and $Receive)
    (understand $Give as single object $Memory preferably { (memory $_) })
    (understand $Receive as single object $Talent preferably { (talent $_) })

(describe action [trade $Give for $Receive])
    trade (the $Give) for (the $Receive)

(refuse [trade ~(memory $) for $])
    (narrate only trade memories)

(narrate only trade memories)
    (conversation partner $NPC)
    "I'm only interested in trading memories," (the $NPC) says.

(prevent [give $ to $NPC])
    (conversation partner $NPC)
    "No, not like that," (the $NPC) says.
    "You have to TRADE it for something."

(prevent [take (talent $Talent)])
    ~(knock holds $Talent)
    (conversation partner $NPC)
    "You can't just have it," (the $NPC) says.
    "That's not how it works. You have to TRADE something for it."

(prevent [trade $ for ~(talent $)])
    (conversation partner $NPC)
    (current room $Room)
    (collect $Obj)
        *(talent $Obj)
        ($Obj is #in $Room)
    (into $Talents)
    "I only have talents to offer you," says (the $NPC),
    "(no space) (the $Talents)."

(refuse [trade $ for $])
    ~(conversation partner $)
    There's no one here to trade with.

(refuse [trade $ for (talent $Talent)])
    (knock holds $Talent)
    You need to trade for something new; you already have (the $Talent).

(perform [trade $Memory for $Talent])
    (now) ($Memory is nowhere)
    (now) ($Memory is traded)
    (conversation partner $NPC)

    %% Keep track of how many memories have been traded so far

    { ($NPC number of trades $Trades) (or) ($Trades = 0) }
    ($Trades incremented into $NewTrades)
    (now) ($NPC number of trades $NewTrades)

    (if) ($NPC is ready to trade for $Talent)
    (then)
        (now) (knock holds $Talent)
        (now) ($NPC has traded)
        (narrate traded $NPC $Memory for $Talent)
    (else)
        (narrate trade incomplete $NPC $Memory for $Talent)
    (endif)

%% Standard rule; but Sand-dancer trading for freedom is different.

($NPC is ready to trade for $)
    ($NPC price $Price)
    ($NPC number of trades $Trades)
    ($Trades >= $Price)
    
%% Don't want to start certain scenes that end with trading until the player has sufficient
%% memories to trade.

($NPC price can be met)
    (count of memories into $MemCount)
    ($NPC price $Price) 
    ($MemCount >= $Price)

%% Placeholders for now:

(narrate traded $NPC $Memory for $Talent)
    (The $NPC) nods.
    "Yes," he says, "a fair trade."
    And something happens inside you as he says it.
    The memory of (the $Memory) shifts and wriggles and fades away and it's still there, but now it's shifted, become something else.
    And, yeah, it kinda does feel like you could call it (the $Talent).  Cool.

(prevent [$Verb | $Rest])
  ~($Verb is one of [examine trade])
  *($Obj is one of $Rest)
  (talent $Obj)
  It's just potential, or something.