%% Tuning (the radio)
%% See https://intfiction.org/t/understanding-complicated-numbers/46769/8

(tunable $) (fail)

(command preprocessing enabled)

%% Recognize simple floating numbers (e.g. "104.7") and convert it to [104 @$ 7] so that
%% it can be recognized as a frequency.

(preprocessing entry point $In $Out)
    (match pattern [10 [@. @$] 10] in $In giving $Out)

(understand $Words as frequency $Freq)
    (recognize $Words as $Unit $Decimal)
	(struct $Freq has tag @frequency and contents [$Unit $Decimal])
    %% It will always be fully bound, but the compiler can't be certain about that unless we tell it
    (fully bound $Freq)

%% Variations corresponding to the different patterns above
(recognize [$U @$ $D khz] as $Unit $Decimal)
    (understand [$U] as number $Unit)
    (understand [$D] as number $Decimal)

(recognize [$U @$ $D] as $Unit $Decimal)
    (understand [$U] as number $Unit)
    (understand [$D] as number $Decimal)

(recognize [$U khz] as $Unit $Decimal)
    (understand [$U] as number $Unit)
    ($Decimal = 0)

(recognize [$U] as $Unit $Decimal)
    (understand [$U] as number $Unit)
    ($Decimal = 0)

@(grammar transformer [[frequency] | $Tail] $SoFar $Verb $Action $Rev)
	(grammar transformer $Tail [2000 | $SoFar] $Verb $Action $Rev)

(match grammar token 2000 against $Words $ into $Freq)
    *(understand $Words as frequency $Freq)
    
(grammar [tune [single object] to [frequency]] for [tune $ to $])

(prevent [tune $Obj to $Freq])
    (when $Obj is not tunable)
    (or)
    (when $Freq is out of range)

(perform [tune $Obj to $Freq])
    (narrate tuning $Obj to $Freq)
    (now) ($Obj is tuned to $Freq)

(describe action [tune $Obj to $Freq])
    tune (the $Obj) to (format $Freq)

(narrate tuning $Obj to $Freq)
    You tune (the $Obj) to (format $Freq).

(format $Freq)
    (deconstruct frequency $Freq into $Unit $Decimal)
    $Unit . (no space) $Decimal khz


(when $Freq is out of range)
    (deconstruct frequency $Freq into $Unit $Decimal)

    { ($Unit $Decimal < 67 0) (or) ($Unit $Decimal > 109 9) }
    That's out of range; the dial goes from 67 khz to 109.9 khz.

(deconstruct frequency $Freq into $Unit $Decimal)
    (struct $Freq has tag @frequency and contents [$Unit $Decimal])

($LU $LD < $RU $RD)
    ($LU < $RU)
    (or)
    { ($LU = $RU) ($LD < $RD) }

($LU $LD > $RU $RD)
    ($LU > $RU)
    (or)
    { ($LU = $RU) ($LD > $RD) }

%% This is a mistake

(grammar [tune [single object]] for [tune $])

(prevent [tune $Obj])
    (when $Obj is not tunable)
    (or)
    You have to TUNE (the $Obj) TO a fequency.

(when $Obj is not tunable)
    ~(tunable $Obj)
    That's not something you can tune.


