%% Things that don't exist in stdlib, but should.

(understand [throw/toss | $Words] as [throw $A at $B])
	*(split $Words by [through] into $Left and $Right)
	*(understand $Left as object $A preferably held)
	*(understand $Right as single object $B preferably { (window $_) })
    
%% Identify rooms that are adjacent to the current room
(adjacent room $Neighbor)
    (current room $Room)
    *(from $Room go $ to $Neighbor)

(collect items in $Container into $Items)
    (collect $Obj)
        *($Obj is #in $Container)
        %% Exclude non-items, including #knock (in the pickup truck)
        (item $Obj)
    (into $Items)

(select random item in $Container into $Object)
    (collect $Obj)
        *($Obj is #in $Container)
    (into $List)
    (randomly select $Object from $List)

(shuffle list [] into [])

(shuffle list [$X] into [$X])

(shuffle list $List into $Shuffled)
    (randomly select $Elem from $List)
    %% Side-effect (unwanted): makes elements distinct
    (remove from $List matching [$Elem] into $More)
    (shuffle list $More into $MoreShuffled)
    ($Shuffled = [$Elem | $MoreShuffled])

($X <= $Y)
    ($X < $Y) (or) ($X = $Y)

($X >= $Y)
    ($X > $Y) (or) ($X = $Y)

(random chance of $Y in $X)
    (random from 1 to $X into $Z)
    ($Z <= $Y)

($X incremented into $Z)
    ($X plus 1 into $Z)

($X decremented into $Z)
    ($X minus 1 into $Z)

%% Playtester kept trying this
(grammar [open [single] with [single]] for [unlock $ with $])

%% All room are proper named; for "look <direction>"
(proper $Room) (room $Room)